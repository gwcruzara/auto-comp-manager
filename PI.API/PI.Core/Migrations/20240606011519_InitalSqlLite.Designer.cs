// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PI.Core.DataContext;

#nullable disable

namespace PI.Core.Migrations
{
    [DbContext(typeof(AutoCompManagerContext))]
    [Migration("20240606011519_InitalSqlLite")]
    partial class InitalSqlLite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("PI.Domain.Models.Penalties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdSpeed");

                    b.ToTable("Penalties", "dbo");
                });

            modelBuilder.Entity("PI.Domain.Models.Ramp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Distance")
                        .HasColumnType("REAL");

                    b.Property<int>("IdSquad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IdSquad");

                    b.ToTable("Ramp", "dbo");
                });

            modelBuilder.Entity("PI.Domain.Models.Speed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BurnedStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CutWay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSquad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutsideLine")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<double>("Time")
                        .HasColumnType("REAL");

                    b.Property<double>("TimeWithoutPenalties")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IdSquad");

                    b.ToTable("Speed", "dbo");
                });

            modelBuilder.Entity("PI.Domain.Models.Squad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Squad", "dbo");
                });

            modelBuilder.Entity("PI.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSquad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdSquad");

                    b.ToTable("Student", "dbo");
                });

            modelBuilder.Entity("PI.Domain.Models.Traction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSquad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IdSquad");

                    b.ToTable("Traction", "dbo");
                });

            modelBuilder.Entity("PI.Domain.Models.Penalties", b =>
                {
                    b.HasOne("PI.Domain.Models.Speed", "Speed")
                        .WithMany("Penalties")
                        .HasForeignKey("IdSpeed");

                    b.Navigation("Speed");
                });

            modelBuilder.Entity("PI.Domain.Models.Ramp", b =>
                {
                    b.HasOne("PI.Domain.Models.Squad", "Squad")
                        .WithMany("Ramp")
                        .HasForeignKey("IdSquad");

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("PI.Domain.Models.Speed", b =>
                {
                    b.HasOne("PI.Domain.Models.Squad", "Squad")
                        .WithMany("Speed")
                        .HasForeignKey("IdSquad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("PI.Domain.Models.Student", b =>
                {
                    b.HasOne("PI.Domain.Models.Squad", "Squad")
                        .WithMany("Student")
                        .HasForeignKey("IdSquad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("PI.Domain.Models.Traction", b =>
                {
                    b.HasOne("PI.Domain.Models.Squad", "Squad")
                        .WithMany("Traction")
                        .HasForeignKey("IdSquad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("PI.Domain.Models.Speed", b =>
                {
                    b.Navigation("Penalties");
                });

            modelBuilder.Entity("PI.Domain.Models.Squad", b =>
                {
                    b.Navigation("Ramp");

                    b.Navigation("Speed");

                    b.Navigation("Student");

                    b.Navigation("Traction");
                });
#pragma warning restore 612, 618
        }
    }
}
